steps:
- name: 'gcr.io/cloud-builders/docker'
  id: 'build-app1'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/my-devops-cicd/gke-cicd-new/quickstart-image', './app1' ]

- name: 'gcr.io/cloud-builders/docker'
  id: 'push-app1'
  waitFor: ['build-app1']
  args: ['push', 'us-central1-docker.pkg.dev/my-devops-cicd/gke-cicd-new/quickstart-image' ]

- name: 'gcr.io/cloud-builders/docker'
  id: 'build-app2'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/my-devops-cicd/gke-cicd-new/flask-image', './app2' ]

- name: 'gcr.io/cloud-builders/docker'
  id: 'push-app2'
  waitFor: ['build-app2']
  args: ['push', 'us-central1-docker.pkg.dev/my-devops-cicd/gke-cicd-new/flask-image' ]

- name: 'gcr.io/cloud-builders/gsutil'
  id: 'debug-list-manifests'
  entrypoint: 'bash'
  args:
    - '-c'
    - 'ls -l ./kubernetes'
  waitFor: ['push-app1', 'push-app2']

- name: 'google/cloud-sdk:latest'
  id: 'deploy-release'
  waitFor: ['push-app1', 'push-app2']
  entrypoint: 'sh'
  args:
    - -xe
    - -c
    - |
      gcloud deploy apply --file deploy/pipeline.yaml --region=us-central1
      gcloud deploy apply --file deploy/dev.yaml --region=us-central1
      gcloud deploy apply --file deploy/prod.yaml --region=us-central1
      gcloud deploy releases create "app-release-${SHORT_SHA}-$(date +%s)" \
        --delivery-pipeline=gke-cicd-pipeline-first \
        --region=us-central1 \
        --from-k8s-manifest=./kubernetes/app1.yaml \
        --from-k8s-manifest=./kubernetes/app2.yaml

options:
  logging: CLOUD_LOGGING_ONLY
